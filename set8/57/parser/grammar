%class-name Parser

%filenames parser
%parsefun-source parse.cc

%baseclass-preinclude rulevalue.h
%stype RuleValue

%scanner ../scanner/scanner.h

%token-path ../tokens/tokens.h

%token  NUMBER
        EXIT
        LIST
        IDENT
        INCREMENT
        DECREMENT

%right  '='
        ASSIGN_ADD
        ASSIGN_SUB
        ASSIGN_MUL
        ASSIGN_DIV
        ASSIGN_MOD
        ASSIGN_BITLSHIFT
        ASSIGN_BITRSHIFT
        ASSIGN_BITOR
        ASSIGN_BITXOR
        ASSIGN_BITAND
%left   '+' '-' '*' '/' '%' '|' '&' '^' '<' '>'
%right  uMinus uNegate

// %debug

%%

lines:
    lines line
|
    line
;


line:
    expr '\n'
    {
        display($1);
    }
|
    EXIT '\n'
    {
        done();
    }
|
    LIST '\n'
    {
        list();
    }
|
    error '\n'    
    {
        prompt();
    }
|
    '\n'
    {
        prompt();
    }
;


expr:
    NUMBER
    {
        $$ = value();
    }
|
    IDENT
    {
        $$ = variable();
    }
|
    '-' expr            %prec uMinus
    {
        $$ = negate($2);
    }
|
    '~' expr            %prec uNegate
    {
        $$ = bitwisenegate($2);
    }
|
    expr '*' expr
    {
        $$ = binaryOperator($1, $3, '*');
    }
|
    expr '/' expr
    {
        $$ = binaryOperator($1, $3, '/');
    }
|
    expr '%' expr
    {
        $$ = binaryOperator($1, $3, '%');
    }
|
    expr '+' expr
    {
        $$ = binaryOperator($1, $3, '+');
    }    
|
    expr '-' expr
    {
        $$ = binaryOperator($1, $3, '-');
    }
|
    expr '<' expr
    {
        $$ = binaryOperator($1, $3, '<');
    }
|
    expr '>' expr
    {
        $$ = binaryOperator($1, $3, '>');
    }
|
    expr '&' expr
    {
        $$ = binaryOperator($1, $3, '&');
    }    
|
    expr '^' expr
    {
        $$ = binaryOperator($1, $3, '^');
    }
|
    expr '|' expr
    {
        $$ = binaryOperator($1, $3, '|');
    }
|
    '(' expr ')'
    {
        $$ = $2;
    }
|
    expr '=' expr
    {
        $$ = assign($1, $3, '=');
    }
|
    expr ASSIGN_ADD expr
    {
        $$ = assign($1, $3, '+');
    }
|
    expr ASSIGN_SUB expr
    {
        $$ = assign($1, $3, '-');
    }
|
    expr ASSIGN_MUL expr
    {
        $$ = assign($1, $3, '*');
    }
|
    expr ASSIGN_DIV expr
    {
        $$ = assign($1, $3, '/');
    }
|
    expr ASSIGN_MOD expr
    {
        $$ = assign($1, $3, '%');
    }
|
    expr ASSIGN_BITLSHIFT expr
    {
        $$ = assign($1, $3, '<');
    }
|
    expr ASSIGN_BITRSHIFT expr
    {
        $$ = assign($1, $3, '>');
    }
|
    expr ASSIGN_BITOR expr
    {
        $$ = assign($1, $3, '|');
    }
|
    expr ASSIGN_BITXOR expr
    {
        $$ = assign($1, $3, '^');
    }
|
    expr ASSIGN_BITAND expr
    {
        $$ = assign($1, $3, '&');
    }
;